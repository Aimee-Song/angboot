buildscript {
	ext {
		quartzVersion = '2.3.0'
		// internal projects available
		apiAvailable = file('../../api').exists()
	}
}

plugins {
	id 'java'
	id 'maven-publish'
}

configurations {
	internalApi
	compile.extendsFrom(internalApi)
}

repositories {
	maven {
		url 'http://javafamily.club:8081/repository/maven-public/'
		content {
			// put internal and custom artifacts here that aren't available in public repositories
			includeGroup 'org.angboot'
		}
	}

	maven {
		url 'http://maven.aliyun.com/nexus/content/groups/public/'
	}

	jcenter()
	mavenCentral()
}

dependencies {
	// internal api
	if(apiAvailable) {
		internalApi project(':api:models')
		internalApi project(':api:common')
		internalApi project(':api:interfaces')
		internalApi project(':api:constants')
	}
	else {
		internalApi "org.angboot:models:${project.version}"
		internalApi "org.angboot:common:${project.version}"
		internalApi "org.angboot:interfaces:${project.version}"
		internalApi "org.angboot:constants:${project.version}"
	}

	// spring
	implementation 'org.springframework:spring-core:5.1.8.RELEASE'
	implementation 'org.springframework:spring-beans:5.1.8.RELEASE'
	implementation 'org.springframework:spring-context:5.1.8.RELEASE'

	// dubbo
	implementation "org.apache.dubbo:dubbo-spring-boot-starter:${dubboVersion}"
	implementation "org.apache.curator:curator-recipes:${dubboCuratorVersion}"

	// quartz
	implementation ("org.quartz-scheduler:quartz:$quartzVersion") {
		exclude(group: 'org.slf4j')
	}

	implementation "org.quartz-scheduler:quartz-jobs:$quartzVersion"

	// log
	implementation 'ch.qos.logback:logback-classic:1.2.3'

	// test
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
}


task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId project.group
			artifactId project.name
			version project.version
			from components.java

			pom.withXml {
				def pomNode = asNode()
				pomNode.dependencies.each {
					it.parent().remove(it)
				}
			}

			// upload source code
			artifact sourceJar {
				classifier "sources"
			}
		}
	}

	repositories {
		maven {
			credentials {
				username 'admin'
				password 'dreamLi0416!@#'
			}

			def snapshotsUrl = 'http://javafamily.club:8081/repository/maven-snapshots/'
			def releasesUrl = 'http://javafamily.club:8081/repository/maven-releases/'
			url = project.version.endsWith('-SNAPSHOT') ? snapshotsUrl : releasesUrl
		}
	}
}


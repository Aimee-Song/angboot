<?xml version="1.0" encoding="UTF-8"?>
<project name="AngBoot Development Environment" basedir="." default="server" xmlns:unless="ant:unless">
   <property file="build.properties"/>
   <sequential unless:set="src.dir">
    <property name="src.dir" value="src"/>
    <propertyfile file="build.properties">
      <entry key="src.dir" value="${src.dir}"/>
    </propertyfile>
   </sequential>

   <sequential unless:set="web.dir">
    <property name="web.dir" value="web"/>
    <propertyfile file="build.properties">
      <entry key="web.dir" value="${web.dir}"/>
    </propertyfile>
   </sequential>

   <!-- import lib -->
   <taskdef resource="net/sf/antcontrib/antcontrib.properties">
      <classpath>
         <pathelement location="${ant.lib.dir}\\ant-contrib-1.0b3.jar"/>
      </classpath>
   </taskdef>

   <property environment="SystemVariable" />
   <property name="node.home" value="${SystemVariable.NODE_HOME}" />

   <condition property="isMac">
      <os family="mac" />
   </condition>

   <condition property="isWindows">
      <os family="windows" />
   </condition>

   <condition property="isUnix">
      <os family="unix" />
   </condition>

   <!-- define build command -->
   <condition property="cmd.npm" value="npm.cmd" else="npm">
      <isset property="isWindows"/>
   </condition>

   <condition property="cmd.mvn" value="./mvnw.cmd" else="./mvnw">
      <isset property="isWindows"/>
   </condition>

   <!-- define our main target -->
   <target name="installDependencies">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="install" />
      </exec>
   </target>

   <target name="init">
      <antcall target="installDependencies" />
   </target>

   <target name="build-angulalr" unless="skip.angular">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="run"/>
         <arg value="build"/>
      </exec>
   </target>

   <target name="build-java" unless="skip.java">
      <exec executable="${cmd.mvn}" failonerror="${error.failonerror}">
         <arg value="compile" />
      </exec>
   </target>

   <target name="build">
      <antcall target="build-angulalr" />
      <antcall target="build-java" />
   </target>

   <target name="server" description="start up the angular server" depends="build">
      <local name="project.home"/>
      <pathconvert property="project.home" dirsep="/">
         <path path="${basedir}"/>
      </pathconvert>

      <!--
         <condition property="sdk.dir" value="${window.sdk.dir}" else="${linux.sdk.dir}">
           <os family="windows" />
         </condition>

            <if>
               <isset property="isWindows"/>
               <then>
                  <property name="mvn.command" value="mvn.cmd" />
               </then>
               <else>
                  <property name="mvn.command" value="mvn" />
               </else>
         </if>
      -->

      <local name="runtime.db.available"/>
      <available property="runtime.db.available" file="${config.db.dir}"/>
      <sequential unless:set="runtime.db.available">
         <mkdir dir="${config.db.dir}"/>
         <copy todir="${config.db.dir}">
            <fileset dir="${install.db.dir}" includes="**/*" />
         </copy>
      </sequential>

      <local name="config.available"/>
      <available property="config.available" file="${config.dir}"/>
      <sequential unless:set="config.available">
         <mkdir dir="${config.dir}"/>
         <copy todir="${config.dir}">
            <fileset dir="${install.dir}" includes="**/*" />
         </copy>
      </sequential>

      <local name="angboot.properties.available"/>
      <available property="angboot.properties.available" file="${config.dir}/angboot.properties"/>

      <property name="config.location" value="${project.home}/${config.dir}"/>
      <sequential unless:set="angboot.properties.available">
         <propertyfile file="${config.dir}/angboot.properties">
            <entry key="angboot.home" value="${config.location}"/>
         </propertyfile>
      </sequential>

      <if>
         <isset property="angboot.properties.available"/>
         <then>
            <property file="${config.location}/angboot.properties"/>
            <changeProperty name="config.location" value="${angboot.home}" />
         </then>
      </if>

      <echo>### AngBoot Home is ${config.location}!</echo>

      <exec executable="${cmd.mvn}" failonerror="${error.failonerror}">
         <arg value="${start.server.command}"/>
         <arg value="-Dspring-boot.run.arguments=angboot.home=${config.location}"/>
      </exec>
   </target>

   <target name="clean">
      <delete dir="${web.app.dist}" />
      <delete dir="${target.dir}" />
      <delete dir="${web.dir}/dist" />
   </target>

   <target name="clean-all" depends="clean">
      <delete dir="${web.dir}\\node_modules" />
   </target>

   <target name="rebuild">
      <antcall target="clean" />
      <antcall target="build" />
   </target>

   <target name="test-java">
      <exec executable="${cmd.mvn}" failonerror="${error.failonerror}">
         <arg value="test"/>
      </exec>
   </target>

   <target name="lint-angular">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="run"/>
         <arg line="lint" />
      </exec>
   </target>

   <target name="test-angular">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="run"/>
         <arg line="test" />
      </exec>
   </target>

   <target name="test">
      <antcall target="test-java" />
      <antcall target="test-angular" />
   </target>

   <target name="rebuild-all">
      <antcall target="clean-all" />
      <antcall target="init" />
      <antcall target="lint-angular"/>
      <antcall target="build" />
      <antcall target="test" />
   </target>

   <target name="watch">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="run"/>
         <arg line="build:watch" />
      </exec>
   </target>

   <target name="angular.generate-index-files">
      <exec executable="${cmd.npm}" failonerror="${error.failonerror}" dir="${web.dir}">
         <arg value="run"/>
         <arg value="generate-index-files"/>
      </exec>
   </target>

   <scriptdef name="changeProperty" language="javascript"
              description="Allows to assign @{property} new value">
      <attribute name="name"/>
      <attribute name="value"/>
      project.setProperty(attributes.get("name"), attributes.get("value"));
   </scriptdef>
</project>

buildscript {
   repositories {
      jcenter()
      mavenCentral()
   }

   dependencies {
      classpath "com.moowork.gradle:gradle-node-plugin:1.3.1"
   }
}

plugins {
   id 'maven-publish'
   id 'com.moowork.node' version '1.3.1'
}

node {
   version = '9.11.1'
   npmVersion = '5.6.0'
   download = true
   workDir = file("${project.gradle.gradleUserHomeDir}/caches/tools")
}

task generateIndexFiles(type: NpmTask, dependsOn: npmInstall) {
   group 'build'
   description 'Generate index files.'
   args = ['run', 'generate-index-files']
}

task compileDevelopment(type: NpmTask, dependsOn: npmInstall) {
   onlyIf { !productionBuild }
   group 'build'
   description = 'Compiles applications using development settings'
   args = ['run', 'build']
}

task compileProduction(type: NpmTask, dependsOn: npmInstall) {
   onlyIf { productionBuild }
   group 'build'
   description = 'Compiles the applications using production settings'
   args = ['run', 'build:prod']
}

task compile(dependsOn: npmInstall) {
   group 'build'
   description 'Compile angular'
   dependsOn compileDevelopment, compileProduction
}

task lint(type: NpmTask, dependsOn: npmInstall) {
   group 'verification'
   description = 'Runs the linter on the TypeScript source code'
   args = ['run', 'lint']
}

task test(type: NpmTask, dependsOn: lint) {
   group 'verification'
   description = "Runs the tests, including linting"
   args = ['run', 'test']
}

task build(dependsOn: [compile, test]) {
   group 'build'
   description = 'Build web'
}

task webCodeTestReport(type: NpmTask) {
   group 'verification'
   description = "Runs the report-coverage after test."
   args = ['run', 'report-coverage']
}

task cleanChunk(type: Delete) {
   group 'build'
   delete = ['../server/build/resources/main/static/app', 'dist', 'build']
}

task clean(dependsOn: [cleanChunk]) {
   group 'build'
}

task cleanAll(type: Delete, dependsOn: [clean]) {
   group 'build'
   delete = ['node_modules', '.gradle']
}

task watch(type: NpmTask, dependsOn: npmInstall) {
   group 'build'
   description 'watch angular compile'

   args = ['run', 'build:watch']
}

task jar(type: Jar, dependsOn: compile) {
   group 'build'
   description = 'Assembles the JAR file containing the compiled resources'
   archiveFileName = "angboot-web-${project.version}.jar"
   destinationDirectory = file("${buildDir}/libs")

   from('dist/prod') {
      include '**/*'
   }
}


publishing {
   publications {
      maven(MavenPublication) {
         artifactId = 'angboot-web'

         afterEvaluate {
            artifact jar
         }
      }
   }

   repositories {
      maven {
         credentials {
            username 'admin'
            password 'dreamLi0416!@#'
         }

         def snapshotsUrl = 'http://javafamily.club:8081/repository/maven-snapshots/'
         def releasesUrl = 'http://javafamily.club:8081/repository/maven-releases/'
         url = project.version.endsWith('-SNAPSHOT') ? snapshotsUrl : releasesUrl
      }
   }
}
